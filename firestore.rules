rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User profiles - users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // User API keys - DENY ALL CLIENT ACCESS (server-side only)
    match /user_api_keys/{userId} {
      allow read, write: if false; // Only server-side service can access
    }
    
    // Projects - users can only access their own projects
    match /projects/{projectId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Generated images cache - allow shared cache for cost control
    match /generated_images_cache/{cacheId} {
      allow read: if true; // Allow public read for shared cache benefits
      allow write: if request.auth != null; // Only authenticated users can write
    }
    
    // Public gallery - read-only for authenticated users
    match /public_gallery/{movieId} {
      allow read: if request.auth != null;
      allow write: if false; // Only server-side can write
    }
    
    // Usage records - users can only access their own records (collection name is 'usage')
    match /usage/{recordId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
  }
}